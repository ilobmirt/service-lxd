# =================================================================================================#
# ROLE MODE - Setup the LXD service of the host                                                    #
# =================================================================================================#

- name: "LXD_SERVICE/TASK_UP_SERVICE/01a - Preload Vars"
  ansible.builtin.set_fact:
    fact_lxd_role_is_cluster: "{{ (applied_lxd_role_config.is_cluster | default(false) == true) | ternary(True, False, False) }}"

- name: "IS it a cluster?"
  ansible.builtin.debug:
    msg: "VALUE = {{ fact_lxd_role_is_cluster }}"

- name: "LXD_SERVICE/TASK_UP_SERVICE/01b - Preload Vars"
  ansible.builtin.set_fact:
    fact_lxd_role_cluster_group: "{{ group_names[0] }}"
  when: ( fact_lxd_role_is_cluster )

- name: "LXD_SERVICE/TASK_UP_SERVICE/01c - Preload Vars"
  ansible.builtin.set_fact:
    fact_lxd_role_cluster_start: "{{ groups[fact_lxd_role_cluster_group] | first }}"
  when: ( fact_lxd_role_is_cluster )

- name: "LXD_SERVICE/TASK_UP_SERVICE/02 - Init for itself"
  ansible.builtin.include_tasks: func_init_self.yml
  when: ( not fact_lxd_role_is_cluster )

- name: "LXD_SERVICE/TASK_UP_SERVICE/03a - Init for cluster"
  ansible.builtin.include_tasks: func_init_cluster_start.yml
  vars:
    input_host:
      ipv4: "{{ hostvars[inventory_hostname].ansible_host }}"
      port: 8443
      name: "{{ inventory_hostname }}"
  when: ( fact_lxd_role_is_cluster ) and ( inventory_hostname == fact_lxd_role_cluster_start )
# I know it's a bit convoluted here, but the idea is to connect each node to the start server one at a time
- name: "LXD_SERVICE/TASK_UP_SERVICE/03b - Init for cluster"
  ansible.builtin.include_tasks: func_init_cluster_node.yml
  vars:
    start_host: "{{ fact_lxd_role_cluster_start }}"
    input_host:
      ipv4: "{{ hostvars[current_host].ansible_host }}"
      port: 8443
      name: "{{ current_host }}"
  with_items: "{{ groups[fact_lxd_role_cluster_group] | reject('equalto', fact_lxd_role_cluster_start) }}"
  loop_control:
    loop_var: current_host
  when: ( fact_lxd_role_is_cluster ) and ( inventory_hostname == fact_lxd_role_cluster_start )

# To-Do: add storage pool creation though include_tasks
- name: "LXD_SERVICE/TASK_UP_SERVICE/03c - Init cluster storage getting around lxd init --preseed"
  ansible.builtin.include_tasks: func_init_cluster_storage_pool.yml
  vars:
    input_start_target: "{{ fact_lxd_role_cluster_start }}"
  when: ( fact_lxd_role_is_cluster )

# Fix - LXDBr0 not being able to assign IPs to containers or update
# DOCS: https://linuxcontainers.org/lxd/docs/master/howto/network_bridge_firewalld/#firewalld-add-the-bridge-to-the-trusted-zone
- name: "LXD_SERVICE/TASK_UP_SERVICE/04 - Firewalld: Allow Ports"
  ansible.posix.firewalld:
    zone: trusted
    interface: "{{ current_network.name }}"
    state: enabled
    permanent: true
    immediate: true
  become: true
  with_items: "{{ applied_lxd_role_config.networks }}"
  loop_control:
    loop_var: current_network

- name: "LXD_SERVICE/TASK_UP_SERVICE/05 - Firewalld: reload config"
  ansible.builtin.shell:
    cmd: "firewall-cmd --reload"
    executable: "{{ applied_lxd_role_config.using_shell }}"
  become: true
  changed_when: false
